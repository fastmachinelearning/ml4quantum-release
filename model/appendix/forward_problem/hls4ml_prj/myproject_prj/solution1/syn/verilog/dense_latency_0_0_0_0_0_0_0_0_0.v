// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_latency_0_0_0_0_0_0_0_0_0 (
        ap_clk,
        ap_rst,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [21:0] data_0_V_read;
input  [21:0] data_1_V_read;
input  [21:0] data_2_V_read;
input  [21:0] data_3_V_read;
output  [22:0] ap_return_0;
output  [22:0] ap_return_1;
output  [22:0] ap_return_2;
output  [22:0] ap_return_3;
output  [22:0] ap_return_4;
output  [22:0] ap_return_5;
output  [22:0] ap_return_6;
output  [22:0] ap_return_7;
input   ap_ce;

reg[22:0] ap_return_0;
reg[22:0] ap_return_1;
reg[22:0] ap_return_2;
reg[22:0] ap_return_3;
reg[22:0] ap_return_4;
reg[22:0] ap_return_5;
reg[22:0] ap_return_6;
reg[22:0] ap_return_7;

wire   [33:0] mul_ln728_fu_163_p2;
reg   [33:0] mul_ln728_reg_3098;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [35:0] mul_ln1118_fu_175_p2;
reg   [35:0] mul_ln1118_reg_3102;
wire   [33:0] mul_ln1118_160_fu_167_p2;
reg   [33:0] mul_ln1118_160_reg_3106;
wire   [31:0] mul_ln728_278_fu_191_p2;
reg   [31:0] mul_ln728_278_reg_3110;
wire   [32:0] mul_ln728_280_fu_177_p2;
reg   [32:0] mul_ln728_280_reg_3114;
wire   [36:0] mul_ln1118_161_fu_172_p2;
reg   [36:0] mul_ln1118_161_reg_3118;
wire   [34:0] mul_ln728_281_fu_184_p2;
reg   [34:0] mul_ln728_281_reg_3122;
wire   [30:0] mul_ln728_282_fu_187_p2;
reg   [30:0] mul_ln728_282_reg_3126;
wire   [35:0] mul_ln728_283_fu_162_p2;
reg   [35:0] mul_ln728_283_reg_3130;
wire   [34:0] mul_ln728_284_fu_186_p2;
reg   [34:0] mul_ln728_284_reg_3134;
wire   [35:0] mul_ln728_285_fu_174_p2;
reg   [35:0] mul_ln728_285_reg_3138;
wire   [34:0] mul_ln1118_162_fu_165_p2;
reg   [34:0] mul_ln1118_162_reg_3142;
wire   [35:0] mul_ln728_286_fu_176_p2;
reg   [35:0] mul_ln728_286_reg_3146;
wire   [36:0] mul_ln1118_163_fu_178_p2;
reg   [36:0] mul_ln1118_163_reg_3150;
wire   [32:0] mul_ln728_288_fu_188_p2;
reg   [32:0] mul_ln728_288_reg_3154;
wire   [36:0] mul_ln1118_169_fu_183_p2;
reg   [36:0] mul_ln1118_169_reg_3158;
wire   [35:0] mul_ln1118_170_fu_166_p2;
reg   [35:0] mul_ln1118_170_reg_3162;
wire   [35:0] mul_ln728_290_fu_185_p2;
reg   [35:0] mul_ln728_290_reg_3166;
wire   [36:0] mul_ln1118_171_fu_182_p2;
reg   [36:0] mul_ln1118_171_reg_3170;
wire   [31:0] mul_ln1118_172_fu_171_p2;
reg   [31:0] mul_ln1118_172_reg_3174;
wire   [35:0] mul_ln728_291_fu_192_p2;
reg   [35:0] mul_ln728_291_reg_3178;
wire   [34:0] mul_ln728_292_fu_181_p2;
reg   [34:0] mul_ln728_292_reg_3182;
reg   [21:0] data_2_V_read_19_reg_4431;
reg   [21:0] data_1_V_read_19_reg_4437;
wire   [34:0] zext_ln1118_220_fu_3631_p1;
reg   [34:0] zext_ln1118_220_reg_4443;
wire   [34:0] zext_ln1118_230_fu_3669_p1;
reg   [34:0] zext_ln1118_230_reg_4448;
wire   [21:0] mul_ln728_283_fu_162_p0;
wire   [35:0] zext_ln1118_224_fu_3657_p1;
wire    ap_block_pp0_stage0;
wire   [21:0] mul_ln728_fu_163_p0;
wire   [33:0] zext_ln1118_218_fu_3620_p1;
wire   [21:0] mul_ln1118_173_fu_164_p0;
wire   [21:0] mul_ln1118_162_fu_165_p0;
wire   [34:0] zext_ln1118_222_fu_3641_p1;
wire   [21:0] mul_ln1118_170_fu_166_p0;
wire   [35:0] zext_ln1118_232_fu_3679_p1;
wire   [21:0] mul_ln1118_160_fu_167_p0;
wire   [21:0] mul_ln728_287_fu_168_p0;
wire   [35:0] zext_ln1118_228_fu_3900_p1;
wire   [21:0] mul_ln1118_166_fu_169_p0;
wire   [21:0] mul_ln1118_165_fu_170_p0;
wire   [21:0] mul_ln1118_172_fu_171_p0;
wire   [21:0] mul_ln1118_161_fu_172_p0;
wire   [21:0] mul_ln728_285_fu_174_p0;
wire   [21:0] mul_ln1118_fu_175_p0;
wire   [21:0] mul_ln728_286_fu_176_p0;
wire   [21:0] mul_ln728_280_fu_177_p0;
wire   [21:0] mul_ln1118_163_fu_178_p0;
wire   [21:0] mul_ln728_279_fu_179_p0;
wire   [21:0] mul_ln1118_168_fu_180_p0;
wire   [21:0] mul_ln728_292_fu_181_p0;
wire   [21:0] mul_ln1118_171_fu_182_p0;
wire   [36:0] zext_ln1118_233_fu_3686_p1;
wire   [21:0] mul_ln1118_169_fu_183_p0;
wire   [21:0] mul_ln728_281_fu_184_p0;
wire   [21:0] mul_ln728_290_fu_185_p0;
wire   [21:0] mul_ln728_284_fu_186_p0;
wire   [21:0] mul_ln728_282_fu_187_p0;
wire   [21:0] mul_ln728_288_fu_188_p0;
wire   [21:0] mul_ln1118_164_fu_189_p0;
wire   [21:0] mul_ln728_289_fu_190_p0;
wire   [21:0] mul_ln728_278_fu_191_p0;
wire   [21:0] mul_ln728_291_fu_192_p0;
wire   [21:0] mul_ln1118_167_fu_193_p0;
wire   [48:0] shl_ln_fu_3692_p3;
wire   [50:0] shl_ln728_s_fu_3704_p3;
wire   [48:0] shl_ln728_281_fu_3716_p3;
wire   [46:0] shl_ln728_282_fu_3728_p3;
wire   [34:0] mul_ln728_279_fu_179_p2;
wire   [49:0] shl_ln728_283_fu_3740_p3;
wire   [47:0] shl_ln728_284_fu_3752_p3;
wire   [49:0] shl_ln728_286_fu_3772_p3;
wire   [45:0] shl_ln728_287_fu_3784_p3;
wire   [50:0] shl_ln728_288_fu_3796_p3;
wire   [49:0] shl_ln728_289_fu_3808_p3;
wire   [30:0] shl_ln6_fu_3828_p3;
wire   [24:0] shl_ln1118_s_fu_3839_p3;
wire   [31:0] zext_ln1118_225_fu_3835_p1;
wire   [31:0] zext_ln1118_226_fu_3846_p1;
wire   [31:0] sub_ln1118_fu_3850_p2;
wire   [46:0] tmp_5_fu_3856_p3;
wire   [50:0] shl_ln728_292_fu_3876_p3;
wire   [35:0] mul_ln1118_164_fu_189_p2;
wire   [50:0] shl_ln728_294_fu_3909_p3;
wire   [35:0] mul_ln1118_165_fu_170_p2;
wire   [50:0] shl_ln728_295_fu_3921_p3;
wire   [35:0] mul_ln728_287_fu_168_p2;
wire   [50:0] shl_ln728_296_fu_3933_p3;
wire   [36:0] mul_ln1118_166_fu_169_p2;
wire   [47:0] shl_ln728_298_fu_3953_p3;
wire   [35:0] mul_ln1118_167_fu_193_p2;
wire   [50:0] shl_ln728_299_fu_3965_p3;
wire   [35:0] mul_ln1118_168_fu_180_p2;
wire   [50:0] shl_ln728_300_fu_3977_p3;
wire   [35:0] mul_ln728_289_fu_190_p2;
wire   [50:0] shl_ln728_301_fu_3989_p3;
wire   [50:0] shl_ln728_304_fu_4017_p3;
wire   [46:0] shl_ln728_306_fu_4037_p3;
wire   [34:0] mul_ln1118_173_fu_164_p2;
wire   [49:0] shl_ln728_307_fu_4049_p3;
wire   [49:0] shl_ln728_309_fu_4069_p3;
wire   [49:0] zext_ln728_258_fu_3792_p1;
wire   [49:0] zext_ln728_252_fu_3700_p1;
wire   [49:0] add_ln703_fu_4081_p2;
wire   [51:0] shl_ln728_302_fu_4001_p3;
wire  signed [51:0] sext_ln728_135_fu_3917_p1;
wire   [51:0] add_ln703_413_fu_4091_p2;
wire   [51:0] zext_ln703_16_fu_4087_p1;
wire   [51:0] add_ln703_414_fu_4097_p2;
wire   [51:0] zext_ln728_259_fu_3804_p1;
wire  signed [51:0] sext_ln728_fu_3712_p1;
wire   [50:0] shl_ln728_303_fu_4009_p3;
wire   [50:0] add_ln703_417_fu_4115_p2;
wire  signed [51:0] sext_ln728_136_fu_3929_p1;
wire  signed [51:0] sext_ln703_fu_4121_p1;
wire   [51:0] add_ln703_416_fu_4109_p2;
wire   [51:0] add_ln703_418_fu_4125_p2;
wire   [50:0] zext_ln728_260_fu_3816_p1;
wire  signed [50:0] sext_ln728_133_fu_3724_p1;
wire   [50:0] add_ln703_420_fu_4137_p2;
wire   [51:0] zext_ln728_265_fu_4025_p1;
wire   [51:0] zext_ln728_263_fu_3941_p1;
wire   [51:0] add_ln703_421_fu_4147_p2;
wire  signed [51:0] sext_ln703_19_fu_4143_p1;
wire   [51:0] add_ln703_422_fu_4153_p2;
wire   [50:0] shl_ln728_290_fu_3820_p3;
wire   [50:0] zext_ln728_253_fu_3736_p1;
wire   [50:0] add_ln703_424_fu_4165_p2;
wire   [51:0] shl_ln728_305_fu_4029_p3;
wire   [51:0] shl_ln728_297_fu_3945_p3;
wire   [51:0] add_ln703_425_fu_4175_p2;
wire   [51:0] zext_ln703_17_fu_4171_p1;
wire   [51:0] add_ln703_426_fu_4181_p2;
wire  signed [51:0] sext_ln728_134_fu_3864_p1;
wire   [51:0] zext_ln728_254_fu_3748_p1;
wire  signed [47:0] sext_ln1118_fu_4045_p1;
wire   [47:0] add_ln703_429_fu_4199_p2;
wire   [48:0] zext_ln1118_229_fu_3961_p1;
wire  signed [48:0] sext_ln703_20_fu_4205_p1;
wire   [48:0] add_ln703_430_fu_4209_p2;
wire   [51:0] add_ln703_428_fu_4193_p2;
wire  signed [51:0] sext_ln703_21_fu_4215_p1;
wire   [49:0] zext_ln728_255_fu_3760_p1;
wire   [49:0] shl_ln728_291_fu_3868_p3;
wire   [49:0] add_ln703_432_fu_4225_p2;
wire  signed [51:0] sext_ln728_139_fu_4057_p1;
wire  signed [51:0] sext_ln728_137_fu_3973_p1;
wire  signed [51:0] sext_ln703_22_fu_4231_p1;
wire   [51:0] add_ln703_433_fu_4235_p2;
wire   [51:0] zext_ln728_261_fu_3884_p1;
wire   [51:0] shl_ln728_285_fu_3764_p3;
wire   [50:0] shl_ln728_308_fu_4061_p3;
wire   [50:0] add_ln703_436_fu_4253_p2;
wire  signed [51:0] sext_ln728_138_fu_3985_p1;
wire   [51:0] zext_ln703_18_fu_4259_p1;
wire   [51:0] add_ln703_435_fu_4247_p2;
wire   [51:0] add_ln703_437_fu_4263_p2;
wire   [51:0] shl_ln728_293_fu_3888_p3;
wire   [51:0] zext_ln728_256_fu_3780_p1;
wire   [50:0] zext_ln703_fu_4077_p1;
wire   [50:0] add_ln703_440_fu_4281_p2;
wire   [51:0] zext_ln728_264_fu_3997_p1;
wire  signed [51:0] sext_ln703_23_fu_4287_p1;
wire   [51:0] add_ln703_439_fu_4275_p2;
wire   [51:0] add_ln703_441_fu_4291_p2;
wire   [51:0] p_Val2_s_fu_4103_p2;
wire   [51:0] acc_1_V_fu_4131_p2;
wire   [51:0] acc_2_V_fu_4159_p2;
wire   [51:0] acc_3_V_fu_4187_p2;
wire   [51:0] acc_4_V_fu_4219_p2;
wire   [51:0] acc_5_V_fu_4241_p2;
wire   [51:0] acc_6_V_fu_4269_p2;
wire   [51:0] acc_7_V_fu_4297_p2;
reg    ap_ce_reg;
reg   [22:0] ap_return_0_int_reg;
reg   [22:0] ap_return_1_int_reg;
reg   [22:0] ap_return_2_int_reg;
reg   [22:0] ap_return_3_int_reg;
reg   [22:0] ap_return_4_int_reg;
reg   [22:0] ap_return_5_int_reg;
reg   [22:0] ap_return_6_int_reg;
reg   [22:0] ap_return_7_int_reg;
wire   [36:0] mul_ln1118_161_fu_172_p00;
wire   [36:0] mul_ln1118_163_fu_178_p00;
wire   [36:0] mul_ln1118_166_fu_169_p00;
wire   [31:0] mul_ln1118_172_fu_171_p00;
wire   [35:0] mul_ln1118_fu_175_p00;
wire   [31:0] mul_ln728_278_fu_191_p00;
wire   [32:0] mul_ln728_280_fu_177_p00;
wire   [34:0] mul_ln728_281_fu_184_p00;
wire   [30:0] mul_ln728_282_fu_187_p00;
wire   [32:0] mul_ln728_288_fu_188_p00;
wire   [34:0] mul_ln728_292_fu_181_p00;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= {{p_Val2_s_fu_4103_p2[51:29]}};
        ap_return_1_int_reg <= {{acc_1_V_fu_4131_p2[51:29]}};
        ap_return_2_int_reg <= {{acc_2_V_fu_4159_p2[51:29]}};
        ap_return_3_int_reg <= {{acc_3_V_fu_4187_p2[51:29]}};
        ap_return_4_int_reg <= {{acc_4_V_fu_4219_p2[51:29]}};
        ap_return_5_int_reg <= {{acc_5_V_fu_4241_p2[51:29]}};
        ap_return_6_int_reg <= {{acc_6_V_fu_4269_p2[51:29]}};
        ap_return_7_int_reg <= {{acc_7_V_fu_4297_p2[51:29]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_1_V_read_19_reg_4437 <= data_1_V_read;
        data_2_V_read_19_reg_4431 <= data_2_V_read;
        mul_ln1118_160_reg_3106 <= mul_ln1118_160_fu_167_p2;
        mul_ln1118_161_reg_3118[36 : 1] <= mul_ln1118_161_fu_172_p2[36 : 1];
        mul_ln1118_162_reg_3142 <= mul_ln1118_162_fu_165_p2;
        mul_ln1118_163_reg_3150[36 : 1] <= mul_ln1118_163_fu_178_p2[36 : 1];
        mul_ln1118_169_reg_3158 <= mul_ln1118_169_fu_183_p2;
        mul_ln1118_170_reg_3162[35 : 4] <= mul_ln1118_170_fu_166_p2[35 : 4];
        mul_ln1118_171_reg_3170[36 : 2] <= mul_ln1118_171_fu_182_p2[36 : 2];
        mul_ln1118_172_reg_3174 <= mul_ln1118_172_fu_171_p2;
        mul_ln1118_reg_3102 <= mul_ln1118_fu_175_p2;
        mul_ln728_278_reg_3110 <= mul_ln728_278_fu_191_p2;
        mul_ln728_280_reg_3114[32 : 1] <= mul_ln728_280_fu_177_p2[32 : 1];
        mul_ln728_281_reg_3122[34 : 6] <= mul_ln728_281_fu_184_p2[34 : 6];
        mul_ln728_282_reg_3126[30 : 3] <= mul_ln728_282_fu_187_p2[30 : 3];
        mul_ln728_283_reg_3130[35 : 3] <= mul_ln728_283_fu_162_p2[35 : 3];
        mul_ln728_284_reg_3134[34 : 2] <= mul_ln728_284_fu_186_p2[34 : 2];
        mul_ln728_285_reg_3138 <= mul_ln728_285_fu_174_p2;
        mul_ln728_286_reg_3146[35 : 2] <= mul_ln728_286_fu_176_p2[35 : 2];
        mul_ln728_288_reg_3154[32 : 4] <= mul_ln728_288_fu_188_p2[32 : 4];
        mul_ln728_290_reg_3166[35 : 2] <= mul_ln728_290_fu_185_p2[35 : 2];
        mul_ln728_291_reg_3178[35 : 1] <= mul_ln728_291_fu_192_p2[35 : 1];
        mul_ln728_292_reg_3182[34 : 2] <= mul_ln728_292_fu_181_p2[34 : 2];
        mul_ln728_reg_3098 <= mul_ln728_fu_163_p2;
        zext_ln1118_220_reg_4443[21 : 0] <= zext_ln1118_220_fu_3631_p1[21 : 0];
        zext_ln1118_230_reg_4448[21 : 0] <= zext_ln1118_230_fu_3669_p1[21 : 0];
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = {{p_Val2_s_fu_4103_p2[51:29]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = {{acc_1_V_fu_4131_p2[51:29]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = {{acc_2_V_fu_4159_p2[51:29]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = {{acc_3_V_fu_4187_p2[51:29]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_4 = ap_return_4_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_4 = {{acc_4_V_fu_4219_p2[51:29]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_5 = ap_return_5_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_5 = {{acc_5_V_fu_4241_p2[51:29]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_6 = ap_return_6_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_6 = {{acc_6_V_fu_4269_p2[51:29]}};
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_7 = ap_return_7_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_7 = {{acc_7_V_fu_4297_p2[51:29]}};
    end
end

assign acc_1_V_fu_4131_p2 = (add_ln703_416_fu_4109_p2 + add_ln703_418_fu_4125_p2);

assign acc_2_V_fu_4159_p2 = ($signed(sext_ln703_19_fu_4143_p1) + $signed(add_ln703_422_fu_4153_p2));

assign acc_3_V_fu_4187_p2 = (zext_ln703_17_fu_4171_p1 + add_ln703_426_fu_4181_p2);

assign acc_4_V_fu_4219_p2 = ($signed(add_ln703_428_fu_4193_p2) + $signed(sext_ln703_21_fu_4215_p1));

assign acc_5_V_fu_4241_p2 = ($signed(sext_ln703_22_fu_4231_p1) + $signed(add_ln703_433_fu_4235_p2));

assign acc_6_V_fu_4269_p2 = (add_ln703_435_fu_4247_p2 + add_ln703_437_fu_4263_p2);

assign acc_7_V_fu_4297_p2 = (add_ln703_439_fu_4275_p2 + add_ln703_441_fu_4291_p2);

assign add_ln703_413_fu_4091_p2 = ($signed(shl_ln728_302_fu_4001_p3) + $signed(52'd4481506315599872));

assign add_ln703_414_fu_4097_p2 = ($signed(sext_ln728_135_fu_3917_p1) + $signed(add_ln703_413_fu_4091_p2));

assign add_ln703_416_fu_4109_p2 = ($signed(zext_ln728_259_fu_3804_p1) + $signed(sext_ln728_fu_3712_p1));

assign add_ln703_417_fu_4115_p2 = ($signed(shl_ln728_303_fu_4009_p3) + $signed(51'd2233039396536320));

assign add_ln703_418_fu_4125_p2 = ($signed(sext_ln728_136_fu_3929_p1) + $signed(sext_ln703_fu_4121_p1));

assign add_ln703_420_fu_4137_p2 = ($signed(zext_ln728_260_fu_3816_p1) + $signed(sext_ln728_133_fu_3724_p1));

assign add_ln703_421_fu_4147_p2 = ($signed(zext_ln728_265_fu_4025_p1) + $signed(52'd4485371786166272));

assign add_ln703_422_fu_4153_p2 = (zext_ln728_263_fu_3941_p1 + add_ln703_421_fu_4147_p2);

assign add_ln703_424_fu_4165_p2 = (shl_ln728_290_fu_3820_p3 + zext_ln728_253_fu_3736_p1);

assign add_ln703_425_fu_4175_p2 = ($signed(shl_ln728_305_fu_4029_p3) + $signed(52'd4484186375192576));

assign add_ln703_426_fu_4181_p2 = (shl_ln728_297_fu_3945_p3 + add_ln703_425_fu_4175_p2);

assign add_ln703_428_fu_4193_p2 = ($signed(sext_ln728_134_fu_3864_p1) + $signed(zext_ln728_254_fu_3748_p1));

assign add_ln703_429_fu_4199_p2 = ($signed(sext_ln1118_fu_4045_p1) + $signed(48'd259278585724928));

assign add_ln703_430_fu_4209_p2 = ($signed(zext_ln1118_229_fu_3961_p1) + $signed(sext_ln703_20_fu_4205_p1));

assign add_ln703_432_fu_4225_p2 = (zext_ln728_255_fu_3760_p1 + shl_ln728_291_fu_3868_p3);

assign add_ln703_433_fu_4235_p2 = ($signed(sext_ln728_139_fu_4057_p1) + $signed(sext_ln728_137_fu_3973_p1));

assign add_ln703_435_fu_4247_p2 = (zext_ln728_261_fu_3884_p1 + shl_ln728_285_fu_3764_p3);

assign add_ln703_436_fu_4253_p2 = (shl_ln728_308_fu_4061_p3 + 51'd12335146074112);

assign add_ln703_437_fu_4263_p2 = ($signed(sext_ln728_138_fu_3985_p1) + $signed(zext_ln703_18_fu_4259_p1));

assign add_ln703_439_fu_4275_p2 = (shl_ln728_293_fu_3888_p3 + zext_ln728_256_fu_3780_p1);

assign add_ln703_440_fu_4281_p2 = ($signed(zext_ln703_fu_4077_p1) + $signed(51'd2247367407435776));

assign add_ln703_441_fu_4291_p2 = ($signed(zext_ln728_264_fu_3997_p1) + $signed(sext_ln703_23_fu_4287_p1));

assign add_ln703_fu_4081_p2 = (zext_ln728_258_fu_3792_p1 + zext_ln728_252_fu_3700_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign mul_ln1118_160_fu_167_p0 = zext_ln1118_218_fu_3620_p1;

assign mul_ln1118_160_fu_167_p2 = ($signed({{1'b0}, {mul_ln1118_160_fu_167_p0}}) * $signed(-34'h5B5));

assign mul_ln1118_161_fu_172_p0 = mul_ln1118_161_fu_172_p00;

assign mul_ln1118_161_fu_172_p00 = data_0_V_read;

assign mul_ln1118_161_fu_172_p2 = ($signed({{1'b0}, {mul_ln1118_161_fu_172_p0}}) * $signed(-37'h2D9E));

assign mul_ln1118_162_fu_165_p0 = zext_ln1118_222_fu_3641_p1;

assign mul_ln1118_162_fu_165_p2 = ($signed({{1'b0}, {mul_ln1118_162_fu_165_p0}}) * $signed(-35'hB49));

assign mul_ln1118_163_fu_178_p0 = mul_ln1118_163_fu_178_p00;

assign mul_ln1118_163_fu_178_p00 = data_1_V_read;

assign mul_ln1118_163_fu_178_p2 = ($signed({{1'b0}, {mul_ln1118_163_fu_178_p0}}) * $signed(-37'h2AEA));

assign mul_ln1118_164_fu_189_p0 = zext_ln1118_228_fu_3900_p1;

assign mul_ln1118_164_fu_189_p2 = ($signed({{1'b0}, {mul_ln1118_164_fu_189_p0}}) * $signed(-36'h1316));

assign mul_ln1118_165_fu_170_p0 = zext_ln1118_228_fu_3900_p1;

assign mul_ln1118_165_fu_170_p2 = ($signed({{1'b0}, {mul_ln1118_165_fu_170_p0}}) * $signed(-36'h1C5A));

assign mul_ln1118_166_fu_169_p0 = mul_ln1118_166_fu_169_p00;

assign mul_ln1118_166_fu_169_p00 = data_2_V_read_19_reg_4431;

assign mul_ln1118_166_fu_169_p2 = ($signed({{1'b0}, {mul_ln1118_166_fu_169_p0}}) * $signed(-37'h2DE4));

assign mul_ln1118_167_fu_193_p0 = zext_ln1118_228_fu_3900_p1;

assign mul_ln1118_167_fu_193_p2 = ($signed({{1'b0}, {mul_ln1118_167_fu_193_p0}}) * $signed(-36'h1795));

assign mul_ln1118_168_fu_180_p0 = zext_ln1118_228_fu_3900_p1;

assign mul_ln1118_168_fu_180_p2 = ($signed({{1'b0}, {mul_ln1118_168_fu_180_p0}}) * $signed(-36'h1478));

assign mul_ln1118_169_fu_183_p0 = zext_ln1118_233_fu_3686_p1;

assign mul_ln1118_169_fu_183_p2 = ($signed({{1'b0}, {mul_ln1118_169_fu_183_p0}}) * $signed(-37'h2609));

assign mul_ln1118_170_fu_166_p0 = zext_ln1118_232_fu_3679_p1;

assign mul_ln1118_170_fu_166_p2 = ($signed({{1'b0}, {mul_ln1118_170_fu_166_p0}}) * $signed(-36'h1090));

assign mul_ln1118_171_fu_182_p0 = zext_ln1118_233_fu_3686_p1;

assign mul_ln1118_171_fu_182_p2 = ($signed({{1'b0}, {mul_ln1118_171_fu_182_p0}}) * $signed(-37'h2074));

assign mul_ln1118_172_fu_171_p0 = mul_ln1118_172_fu_171_p00;

assign mul_ln1118_172_fu_171_p00 = data_3_V_read;

assign mul_ln1118_172_fu_171_p2 = ($signed({{1'b0}, {mul_ln1118_172_fu_171_p0}}) * $signed(-'h17D));

assign mul_ln1118_173_fu_164_p0 = zext_ln1118_230_reg_4448;

assign mul_ln1118_173_fu_164_p2 = ($signed({{1'b0}, {mul_ln1118_173_fu_164_p0}}) * $signed(-35'hA02));

assign mul_ln1118_fu_175_p0 = mul_ln1118_fu_175_p00;

assign mul_ln1118_fu_175_p00 = data_0_V_read;

assign mul_ln1118_fu_175_p2 = ($signed({{1'b0}, {mul_ln1118_fu_175_p0}}) * $signed(-36'h125D));

assign mul_ln728_278_fu_191_p0 = mul_ln728_278_fu_191_p00;

assign mul_ln728_278_fu_191_p00 = data_0_V_read;

assign mul_ln728_278_fu_191_p2 = (mul_ln728_278_fu_191_p0 * $signed('h27F));

assign mul_ln728_279_fu_179_p0 = zext_ln1118_220_reg_4443;

assign mul_ln728_279_fu_179_p2 = (mul_ln728_279_fu_179_p0 * $signed('h1F20));

assign mul_ln728_280_fu_177_p0 = mul_ln728_280_fu_177_p00;

assign mul_ln728_280_fu_177_p00 = data_0_V_read;

assign mul_ln728_280_fu_177_p2 = (mul_ln728_280_fu_177_p0 * $signed('h6AA));

assign mul_ln728_281_fu_184_p0 = mul_ln728_281_fu_184_p00;

assign mul_ln728_281_fu_184_p00 = data_0_V_read;

assign mul_ln728_281_fu_184_p2 = (mul_ln728_281_fu_184_p0 * $signed('h1240));

assign mul_ln728_282_fu_187_p0 = mul_ln728_282_fu_187_p00;

assign mul_ln728_282_fu_187_p00 = data_1_V_read;

assign mul_ln728_282_fu_187_p2 = (mul_ln728_282_fu_187_p0 * $signed('h1B8));

assign mul_ln728_283_fu_162_p0 = zext_ln1118_224_fu_3657_p1;

assign mul_ln728_283_fu_162_p2 = (mul_ln728_283_fu_162_p0 * $signed('h2988));

assign mul_ln728_284_fu_186_p0 = zext_ln1118_222_fu_3641_p1;

assign mul_ln728_284_fu_186_p2 = (mul_ln728_284_fu_186_p0 * $signed('h139C));

assign mul_ln728_285_fu_174_p0 = zext_ln1118_224_fu_3657_p1;

assign mul_ln728_285_fu_174_p2 = (mul_ln728_285_fu_174_p0 * $signed('h31FB));

assign mul_ln728_286_fu_176_p0 = zext_ln1118_224_fu_3657_p1;

assign mul_ln728_286_fu_176_p2 = (mul_ln728_286_fu_176_p0 * $signed('h2B24));

assign mul_ln728_287_fu_168_p0 = zext_ln1118_228_fu_3900_p1;

assign mul_ln728_287_fu_168_p2 = (mul_ln728_287_fu_168_p0 * $signed('h29A3));

assign mul_ln728_288_fu_188_p0 = mul_ln728_288_fu_188_p00;

assign mul_ln728_288_fu_188_p00 = data_2_V_read;

assign mul_ln728_288_fu_188_p2 = (mul_ln728_288_fu_188_p0 * $signed('h6D0));

assign mul_ln728_289_fu_190_p0 = zext_ln1118_228_fu_3900_p1;

assign mul_ln728_289_fu_190_p2 = (mul_ln728_289_fu_190_p0 * $signed('h395A));

assign mul_ln728_290_fu_185_p0 = zext_ln1118_232_fu_3679_p1;

assign mul_ln728_290_fu_185_p2 = (mul_ln728_290_fu_185_p0 * $signed('h2D7C));

assign mul_ln728_291_fu_192_p0 = zext_ln1118_232_fu_3679_p1;

assign mul_ln728_291_fu_192_p2 = (mul_ln728_291_fu_192_p0 * $signed('h2856));

assign mul_ln728_292_fu_181_p0 = mul_ln728_292_fu_181_p00;

assign mul_ln728_292_fu_181_p00 = data_3_V_read;

assign mul_ln728_292_fu_181_p2 = (mul_ln728_292_fu_181_p0 * $signed('h1284));

assign mul_ln728_fu_163_p0 = zext_ln1118_218_fu_3620_p1;

assign mul_ln728_fu_163_p2 = (mul_ln728_fu_163_p0 * $signed('hF73));

assign p_Val2_s_fu_4103_p2 = (zext_ln703_16_fu_4087_p1 + add_ln703_414_fu_4097_p2);

assign sext_ln1118_fu_4045_p1 = $signed(shl_ln728_306_fu_4037_p3);

assign sext_ln703_19_fu_4143_p1 = $signed(add_ln703_420_fu_4137_p2);

assign sext_ln703_20_fu_4205_p1 = $signed(add_ln703_429_fu_4199_p2);

assign sext_ln703_21_fu_4215_p1 = $signed(add_ln703_430_fu_4209_p2);

assign sext_ln703_22_fu_4231_p1 = $signed(add_ln703_432_fu_4225_p2);

assign sext_ln703_23_fu_4287_p1 = $signed(add_ln703_440_fu_4281_p2);

assign sext_ln703_fu_4121_p1 = $signed(add_ln703_417_fu_4115_p2);

assign sext_ln728_133_fu_3724_p1 = $signed(shl_ln728_281_fu_3716_p3);

assign sext_ln728_134_fu_3864_p1 = $signed(tmp_5_fu_3856_p3);

assign sext_ln728_135_fu_3917_p1 = $signed(shl_ln728_294_fu_3909_p3);

assign sext_ln728_136_fu_3929_p1 = $signed(shl_ln728_295_fu_3921_p3);

assign sext_ln728_137_fu_3973_p1 = $signed(shl_ln728_299_fu_3965_p3);

assign sext_ln728_138_fu_3985_p1 = $signed(shl_ln728_300_fu_3977_p3);

assign sext_ln728_139_fu_4057_p1 = $signed(shl_ln728_307_fu_4049_p3);

assign sext_ln728_fu_3712_p1 = $signed(shl_ln728_s_fu_3704_p3);

assign shl_ln1118_s_fu_3839_p3 = {{data_1_V_read_19_reg_4437}, {3'd0}};

assign shl_ln6_fu_3828_p3 = {{data_1_V_read_19_reg_4437}, {9'd0}};

assign shl_ln728_281_fu_3716_p3 = {{mul_ln1118_160_reg_3106}, {15'd0}};

assign shl_ln728_282_fu_3728_p3 = {{mul_ln728_278_reg_3110}, {15'd0}};

assign shl_ln728_283_fu_3740_p3 = {{mul_ln728_279_fu_179_p2}, {15'd0}};

assign shl_ln728_284_fu_3752_p3 = {{mul_ln728_280_reg_3114}, {15'd0}};

assign shl_ln728_285_fu_3764_p3 = {{mul_ln1118_161_reg_3118}, {15'd0}};

assign shl_ln728_286_fu_3772_p3 = {{mul_ln728_281_reg_3122}, {15'd0}};

assign shl_ln728_287_fu_3784_p3 = {{mul_ln728_282_reg_3126}, {15'd0}};

assign shl_ln728_288_fu_3796_p3 = {{mul_ln728_283_reg_3130}, {15'd0}};

assign shl_ln728_289_fu_3808_p3 = {{mul_ln728_284_reg_3134}, {15'd0}};

assign shl_ln728_290_fu_3820_p3 = {{mul_ln728_285_reg_3138}, {15'd0}};

assign shl_ln728_291_fu_3868_p3 = {{mul_ln1118_162_reg_3142}, {15'd0}};

assign shl_ln728_292_fu_3876_p3 = {{mul_ln728_286_reg_3146}, {15'd0}};

assign shl_ln728_293_fu_3888_p3 = {{mul_ln1118_163_reg_3150}, {15'd0}};

assign shl_ln728_294_fu_3909_p3 = {{mul_ln1118_164_fu_189_p2}, {15'd0}};

assign shl_ln728_295_fu_3921_p3 = {{mul_ln1118_165_fu_170_p2}, {15'd0}};

assign shl_ln728_296_fu_3933_p3 = {{mul_ln728_287_fu_168_p2}, {15'd0}};

assign shl_ln728_297_fu_3945_p3 = {{mul_ln1118_166_fu_169_p2}, {15'd0}};

assign shl_ln728_298_fu_3953_p3 = {{mul_ln728_288_reg_3154}, {15'd0}};

assign shl_ln728_299_fu_3965_p3 = {{mul_ln1118_167_fu_193_p2}, {15'd0}};

assign shl_ln728_300_fu_3977_p3 = {{mul_ln1118_168_fu_180_p2}, {15'd0}};

assign shl_ln728_301_fu_3989_p3 = {{mul_ln728_289_fu_190_p2}, {15'd0}};

assign shl_ln728_302_fu_4001_p3 = {{mul_ln1118_169_reg_3158}, {15'd0}};

assign shl_ln728_303_fu_4009_p3 = {{mul_ln1118_170_reg_3162}, {15'd0}};

assign shl_ln728_304_fu_4017_p3 = {{mul_ln728_290_reg_3166}, {15'd0}};

assign shl_ln728_305_fu_4029_p3 = {{mul_ln1118_171_reg_3170}, {15'd0}};

assign shl_ln728_306_fu_4037_p3 = {{mul_ln1118_172_reg_3174}, {15'd0}};

assign shl_ln728_307_fu_4049_p3 = {{mul_ln1118_173_fu_164_p2}, {15'd0}};

assign shl_ln728_308_fu_4061_p3 = {{mul_ln728_291_reg_3178}, {15'd0}};

assign shl_ln728_309_fu_4069_p3 = {{mul_ln728_292_reg_3182}, {15'd0}};

assign shl_ln728_s_fu_3704_p3 = {{mul_ln1118_reg_3102}, {15'd0}};

assign shl_ln_fu_3692_p3 = {{mul_ln728_reg_3098}, {15'd0}};

assign sub_ln1118_fu_3850_p2 = (zext_ln1118_225_fu_3835_p1 - zext_ln1118_226_fu_3846_p1);

assign tmp_5_fu_3856_p3 = {{sub_ln1118_fu_3850_p2}, {15'd0}};

assign zext_ln1118_218_fu_3620_p1 = data_0_V_read;

assign zext_ln1118_220_fu_3631_p1 = data_0_V_read;

assign zext_ln1118_222_fu_3641_p1 = data_1_V_read;

assign zext_ln1118_224_fu_3657_p1 = data_1_V_read;

assign zext_ln1118_225_fu_3835_p1 = shl_ln6_fu_3828_p3;

assign zext_ln1118_226_fu_3846_p1 = shl_ln1118_s_fu_3839_p3;

assign zext_ln1118_228_fu_3900_p1 = data_2_V_read_19_reg_4431;

assign zext_ln1118_229_fu_3961_p1 = shl_ln728_298_fu_3953_p3;

assign zext_ln1118_230_fu_3669_p1 = data_3_V_read;

assign zext_ln1118_232_fu_3679_p1 = data_3_V_read;

assign zext_ln1118_233_fu_3686_p1 = data_3_V_read;

assign zext_ln703_16_fu_4087_p1 = add_ln703_fu_4081_p2;

assign zext_ln703_17_fu_4171_p1 = add_ln703_424_fu_4165_p2;

assign zext_ln703_18_fu_4259_p1 = add_ln703_436_fu_4253_p2;

assign zext_ln703_fu_4077_p1 = shl_ln728_309_fu_4069_p3;

assign zext_ln728_252_fu_3700_p1 = shl_ln_fu_3692_p3;

assign zext_ln728_253_fu_3736_p1 = shl_ln728_282_fu_3728_p3;

assign zext_ln728_254_fu_3748_p1 = shl_ln728_283_fu_3740_p3;

assign zext_ln728_255_fu_3760_p1 = shl_ln728_284_fu_3752_p3;

assign zext_ln728_256_fu_3780_p1 = shl_ln728_286_fu_3772_p3;

assign zext_ln728_258_fu_3792_p1 = shl_ln728_287_fu_3784_p3;

assign zext_ln728_259_fu_3804_p1 = shl_ln728_288_fu_3796_p3;

assign zext_ln728_260_fu_3816_p1 = shl_ln728_289_fu_3808_p3;

assign zext_ln728_261_fu_3884_p1 = shl_ln728_292_fu_3876_p3;

assign zext_ln728_263_fu_3941_p1 = shl_ln728_296_fu_3933_p3;

assign zext_ln728_264_fu_3997_p1 = shl_ln728_301_fu_3989_p3;

assign zext_ln728_265_fu_4025_p1 = shl_ln728_304_fu_4017_p3;

always @ (posedge ap_clk) begin
    mul_ln728_280_reg_3114[0] <= 1'b0;
    mul_ln1118_161_reg_3118[0] <= 1'b0;
    mul_ln728_281_reg_3122[5:0] <= 6'b000000;
    mul_ln728_282_reg_3126[2:0] <= 3'b000;
    mul_ln728_283_reg_3130[2:0] <= 3'b000;
    mul_ln728_284_reg_3134[1:0] <= 2'b00;
    mul_ln728_286_reg_3146[1:0] <= 2'b00;
    mul_ln1118_163_reg_3150[0] <= 1'b0;
    mul_ln728_288_reg_3154[3:0] <= 4'b0000;
    mul_ln1118_170_reg_3162[3:0] <= 4'b0000;
    mul_ln728_290_reg_3166[1:0] <= 2'b00;
    mul_ln1118_171_reg_3170[1:0] <= 2'b00;
    mul_ln728_291_reg_3178[0] <= 1'b0;
    mul_ln728_292_reg_3182[1:0] <= 2'b00;
    zext_ln1118_220_reg_4443[34:22] <= 13'b0000000000000;
    zext_ln1118_230_reg_4448[34:22] <= 13'b0000000000000;
end

endmodule //dense_latency_0_0_0_0_0_0_0_0_0
