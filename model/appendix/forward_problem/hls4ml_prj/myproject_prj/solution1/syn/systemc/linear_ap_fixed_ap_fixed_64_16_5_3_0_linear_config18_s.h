// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _linear_ap_fixed_ap_fixed_64_16_5_3_0_linear_config18_s_HH_
#define _linear_ap_fixed_ap_fixed_64_16_5_3_0_linear_config18_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct linear_ap_fixed_ap_fixed_64_16_5_3_0_linear_config18_s : public sc_module {
    // Port declarations 25
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<28> > data_0_V_read;
    sc_in< sc_lv<28> > data_1_V_read;
    sc_in< sc_lv<28> > data_2_V_read;
    sc_in< sc_lv<28> > data_3_V_read;
    sc_in< sc_lv<28> > data_4_V_read;
    sc_in< sc_lv<28> > data_5_V_read;
    sc_in< sc_lv<28> > data_6_V_read;
    sc_in< sc_lv<28> > data_7_V_read;
    sc_in< sc_lv<28> > data_8_V_read;
    sc_in< sc_lv<28> > data_9_V_read;
    sc_in< sc_lv<28> > data_10_V_read;
    sc_in< sc_lv<28> > data_11_V_read;
    sc_out< sc_lv<64> > ap_return_0;
    sc_out< sc_lv<64> > ap_return_1;
    sc_out< sc_lv<64> > ap_return_2;
    sc_out< sc_lv<64> > ap_return_3;
    sc_out< sc_lv<64> > ap_return_4;
    sc_out< sc_lv<64> > ap_return_5;
    sc_out< sc_lv<64> > ap_return_6;
    sc_out< sc_lv<64> > ap_return_7;
    sc_out< sc_lv<64> > ap_return_8;
    sc_out< sc_lv<64> > ap_return_9;
    sc_out< sc_lv<64> > ap_return_10;
    sc_out< sc_lv<64> > ap_return_11;


    // Module declarations
    linear_ap_fixed_ap_fixed_64_16_5_3_0_linear_config18_s(sc_module_name name);
    SC_HAS_PROCESS(linear_ap_fixed_ap_fixed_64_16_5_3_0_linear_config18_s);

    ~linear_ap_fixed_ap_fixed_64_16_5_3_0_linear_config18_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<52> > res_0_V_write_assign_fu_120_p3;
    sc_signal< sc_lv<52> > res_1_V_write_assign_fu_132_p3;
    sc_signal< sc_lv<52> > res_2_V_write_assign_fu_144_p3;
    sc_signal< sc_lv<52> > res_3_V_write_assign_fu_156_p3;
    sc_signal< sc_lv<52> > res_4_V_write_assign_fu_168_p3;
    sc_signal< sc_lv<52> > res_5_V_write_assign_fu_180_p3;
    sc_signal< sc_lv<52> > res_6_V_write_assign_fu_192_p3;
    sc_signal< sc_lv<52> > res_7_V_write_assign_fu_204_p3;
    sc_signal< sc_lv<52> > res_8_V_write_assign_fu_216_p3;
    sc_signal< sc_lv<52> > res_9_V_write_assign_fu_228_p3;
    sc_signal< sc_lv<52> > res_10_V_write_assign_fu_240_p3;
    sc_signal< sc_lv<52> > res_11_V_write_assign_fu_252_p3;
    sc_signal< sc_lv<64> > sext_ln728_fu_128_p1;
    sc_signal< sc_lv<64> > sext_ln728_20_fu_140_p1;
    sc_signal< sc_lv<64> > sext_ln728_21_fu_152_p1;
    sc_signal< sc_lv<64> > sext_ln728_22_fu_164_p1;
    sc_signal< sc_lv<64> > sext_ln728_23_fu_176_p1;
    sc_signal< sc_lv<64> > sext_ln728_24_fu_188_p1;
    sc_signal< sc_lv<64> > sext_ln728_25_fu_200_p1;
    sc_signal< sc_lv<64> > sext_ln728_26_fu_212_p1;
    sc_signal< sc_lv<64> > sext_ln728_27_fu_224_p1;
    sc_signal< sc_lv<64> > sext_ln728_28_fu_236_p1;
    sc_signal< sc_lv<64> > sext_ln728_29_fu_248_p1;
    sc_signal< sc_lv<64> > sext_ln728_30_fu_260_p1;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_res_0_V_write_assign_fu_120_p3();
    void thread_res_10_V_write_assign_fu_240_p3();
    void thread_res_11_V_write_assign_fu_252_p3();
    void thread_res_1_V_write_assign_fu_132_p3();
    void thread_res_2_V_write_assign_fu_144_p3();
    void thread_res_3_V_write_assign_fu_156_p3();
    void thread_res_4_V_write_assign_fu_168_p3();
    void thread_res_5_V_write_assign_fu_180_p3();
    void thread_res_6_V_write_assign_fu_192_p3();
    void thread_res_7_V_write_assign_fu_204_p3();
    void thread_res_8_V_write_assign_fu_216_p3();
    void thread_res_9_V_write_assign_fu_228_p3();
    void thread_sext_ln728_20_fu_140_p1();
    void thread_sext_ln728_21_fu_152_p1();
    void thread_sext_ln728_22_fu_164_p1();
    void thread_sext_ln728_23_fu_176_p1();
    void thread_sext_ln728_24_fu_188_p1();
    void thread_sext_ln728_25_fu_200_p1();
    void thread_sext_ln728_26_fu_212_p1();
    void thread_sext_ln728_27_fu_224_p1();
    void thread_sext_ln728_28_fu_236_p1();
    void thread_sext_ln728_29_fu_248_p1();
    void thread_sext_ln728_30_fu_260_p1();
    void thread_sext_ln728_fu_128_p1();
};

}

using namespace ap_rtl;

#endif
