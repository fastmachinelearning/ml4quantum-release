// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::ap_const_logic_1 = sc_dt::Log_1;
const bool relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::ap_const_boolean_1 = true;
const sc_lv<64> relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::ap_const_lv32_1D = "11101";
const sc_lv<32> relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::ap_const_lv32_32 = "110010";
const sc_lv<22> relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::ap_const_lv22_0 = "0000000000000000000000";
const sc_logic relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::ap_const_logic_0 = sc_dt::Log_0;

relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return_0);
    sensitive << ( select_ln1494_fu_78_p3 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( select_ln1494_34_fu_102_p3 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( select_ln1494_35_fu_126_p3 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( select_ln1494_36_fu_150_p3 );

    SC_METHOD(thread_icmp_ln1494_1_fu_86_p2);
    sensitive << ( data_1_V_read );

    SC_METHOD(thread_icmp_ln1494_2_fu_110_p2);
    sensitive << ( data_2_V_read );

    SC_METHOD(thread_icmp_ln1494_3_fu_134_p2);
    sensitive << ( data_3_V_read );

    SC_METHOD(thread_icmp_ln1494_fu_62_p2);
    sensitive << ( data_0_V_read );

    SC_METHOD(thread_select_ln1494_34_fu_102_p3);
    sensitive << ( icmp_ln1494_1_fu_86_p2 );
    sensitive << ( trunc_ln708_1_fu_92_p4 );

    SC_METHOD(thread_select_ln1494_35_fu_126_p3);
    sensitive << ( icmp_ln1494_2_fu_110_p2 );
    sensitive << ( trunc_ln708_2_fu_116_p4 );

    SC_METHOD(thread_select_ln1494_36_fu_150_p3);
    sensitive << ( icmp_ln1494_3_fu_134_p2 );
    sensitive << ( trunc_ln708_3_fu_140_p4 );

    SC_METHOD(thread_select_ln1494_fu_78_p3);
    sensitive << ( icmp_ln1494_fu_62_p2 );
    sensitive << ( trunc_ln_fu_68_p4 );

    SC_METHOD(thread_trunc_ln708_1_fu_92_p4);
    sensitive << ( data_1_V_read );

    SC_METHOD(thread_trunc_ln708_2_fu_116_p4);
    sensitive << ( data_2_V_read );

    SC_METHOD(thread_trunc_ln708_3_fu_140_p4);
    sensitive << ( data_3_V_read );

    SC_METHOD(thread_trunc_ln_fu_68_p4);
    sensitive << ( data_0_V_read );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_0_V_read, "(port)data_0_V_read");
    sc_trace(mVcdFile, data_1_V_read, "(port)data_1_V_read");
    sc_trace(mVcdFile, data_2_V_read, "(port)data_2_V_read");
    sc_trace(mVcdFile, data_3_V_read, "(port)data_3_V_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, icmp_ln1494_fu_62_p2, "icmp_ln1494_fu_62_p2");
    sc_trace(mVcdFile, trunc_ln_fu_68_p4, "trunc_ln_fu_68_p4");
    sc_trace(mVcdFile, icmp_ln1494_1_fu_86_p2, "icmp_ln1494_1_fu_86_p2");
    sc_trace(mVcdFile, trunc_ln708_1_fu_92_p4, "trunc_ln708_1_fu_92_p4");
    sc_trace(mVcdFile, icmp_ln1494_2_fu_110_p2, "icmp_ln1494_2_fu_110_p2");
    sc_trace(mVcdFile, trunc_ln708_2_fu_116_p4, "trunc_ln708_2_fu_116_p4");
    sc_trace(mVcdFile, icmp_ln1494_3_fu_134_p2, "icmp_ln1494_3_fu_134_p2");
    sc_trace(mVcdFile, trunc_ln708_3_fu_140_p4, "trunc_ln708_3_fu_140_p4");
    sc_trace(mVcdFile, select_ln1494_fu_78_p3, "select_ln1494_fu_78_p3");
    sc_trace(mVcdFile, select_ln1494_34_fu_102_p3, "select_ln1494_34_fu_102_p3");
    sc_trace(mVcdFile, select_ln1494_35_fu_126_p3, "select_ln1494_35_fu_126_p3");
    sc_trace(mVcdFile, select_ln1494_36_fu_150_p3, "select_ln1494_36_fu_150_p3");
#endif

    }
}

relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::~relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_ap_return_0() {
    ap_return_0 = select_ln1494_fu_78_p3.read();
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_ap_return_1() {
    ap_return_1 = select_ln1494_34_fu_102_p3.read();
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_ap_return_2() {
    ap_return_2 = select_ln1494_35_fu_126_p3.read();
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_ap_return_3() {
    ap_return_3 = select_ln1494_36_fu_150_p3.read();
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_icmp_ln1494_1_fu_86_p2() {
    icmp_ln1494_1_fu_86_p2 = (!data_1_V_read.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): (sc_bigint<64>(data_1_V_read.read()) > sc_bigint<64>(ap_const_lv64_0));
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_icmp_ln1494_2_fu_110_p2() {
    icmp_ln1494_2_fu_110_p2 = (!data_2_V_read.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): (sc_bigint<64>(data_2_V_read.read()) > sc_bigint<64>(ap_const_lv64_0));
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_icmp_ln1494_3_fu_134_p2() {
    icmp_ln1494_3_fu_134_p2 = (!data_3_V_read.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): (sc_bigint<64>(data_3_V_read.read()) > sc_bigint<64>(ap_const_lv64_0));
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_icmp_ln1494_fu_62_p2() {
    icmp_ln1494_fu_62_p2 = (!data_0_V_read.read().is_01() || !ap_const_lv64_0.is_01())? sc_lv<1>(): (sc_bigint<64>(data_0_V_read.read()) > sc_bigint<64>(ap_const_lv64_0));
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_select_ln1494_34_fu_102_p3() {
    select_ln1494_34_fu_102_p3 = (!icmp_ln1494_1_fu_86_p2.read()[0].is_01())? sc_lv<22>(): ((icmp_ln1494_1_fu_86_p2.read()[0].to_bool())? trunc_ln708_1_fu_92_p4.read(): ap_const_lv22_0);
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_select_ln1494_35_fu_126_p3() {
    select_ln1494_35_fu_126_p3 = (!icmp_ln1494_2_fu_110_p2.read()[0].is_01())? sc_lv<22>(): ((icmp_ln1494_2_fu_110_p2.read()[0].to_bool())? trunc_ln708_2_fu_116_p4.read(): ap_const_lv22_0);
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_select_ln1494_36_fu_150_p3() {
    select_ln1494_36_fu_150_p3 = (!icmp_ln1494_3_fu_134_p2.read()[0].is_01())? sc_lv<22>(): ((icmp_ln1494_3_fu_134_p2.read()[0].to_bool())? trunc_ln708_3_fu_140_p4.read(): ap_const_lv22_0);
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_select_ln1494_fu_78_p3() {
    select_ln1494_fu_78_p3 = (!icmp_ln1494_fu_62_p2.read()[0].is_01())? sc_lv<22>(): ((icmp_ln1494_fu_62_p2.read()[0].to_bool())? trunc_ln_fu_68_p4.read(): ap_const_lv22_0);
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_trunc_ln708_1_fu_92_p4() {
    trunc_ln708_1_fu_92_p4 = data_1_V_read.read().range(50, 29);
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_trunc_ln708_2_fu_116_p4() {
    trunc_ln708_2_fu_116_p4 = data_2_V_read.read().range(50, 29);
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_trunc_ln708_3_fu_140_p4() {
    trunc_ln708_3_fu_140_p4 = data_3_V_read.read().range(50, 29);
}

void relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s::thread_trunc_ln_fu_68_p4() {
    trunc_ln_fu_68_p4 = data_0_V_read.read().range(50, 29);
}

}

