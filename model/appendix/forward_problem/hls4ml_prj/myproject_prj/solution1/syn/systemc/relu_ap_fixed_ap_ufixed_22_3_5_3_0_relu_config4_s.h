// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s_HH_
#define _relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s : public sc_module {
    // Port declarations 9
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > data_0_V_read;
    sc_in< sc_lv<64> > data_1_V_read;
    sc_in< sc_lv<64> > data_2_V_read;
    sc_in< sc_lv<64> > data_3_V_read;
    sc_out< sc_lv<22> > ap_return_0;
    sc_out< sc_lv<22> > ap_return_1;
    sc_out< sc_lv<22> > ap_return_2;
    sc_out< sc_lv<22> > ap_return_3;


    // Module declarations
    relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s(sc_module_name name);
    SC_HAS_PROCESS(relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s);

    ~relu_ap_fixed_ap_ufixed_22_3_5_3_0_relu_config4_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > icmp_ln1494_fu_62_p2;
    sc_signal< sc_lv<22> > trunc_ln_fu_68_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_86_p2;
    sc_signal< sc_lv<22> > trunc_ln708_1_fu_92_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_110_p2;
    sc_signal< sc_lv<22> > trunc_ln708_2_fu_116_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_134_p2;
    sc_signal< sc_lv<22> > trunc_ln708_3_fu_140_p4;
    sc_signal< sc_lv<22> > select_ln1494_fu_78_p3;
    sc_signal< sc_lv<22> > select_ln1494_34_fu_102_p3;
    sc_signal< sc_lv<22> > select_ln1494_35_fu_126_p3;
    sc_signal< sc_lv<22> > select_ln1494_36_fu_150_p3;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<22> ap_const_lv22_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_icmp_ln1494_1_fu_86_p2();
    void thread_icmp_ln1494_2_fu_110_p2();
    void thread_icmp_ln1494_3_fu_134_p2();
    void thread_icmp_ln1494_fu_62_p2();
    void thread_select_ln1494_34_fu_102_p3();
    void thread_select_ln1494_35_fu_126_p3();
    void thread_select_ln1494_36_fu_150_p3();
    void thread_select_ln1494_fu_78_p3();
    void thread_trunc_ln708_1_fu_92_p4();
    void thread_trunc_ln708_2_fu_116_p4();
    void thread_trunc_ln708_3_fu_140_p4();
    void thread_trunc_ln_fu_68_p4();
};

}

using namespace ap_rtl;

#endif
