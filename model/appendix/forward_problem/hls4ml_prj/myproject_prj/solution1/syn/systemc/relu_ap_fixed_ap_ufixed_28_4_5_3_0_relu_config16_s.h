// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_ap_fixed_ap_ufixed_28_4_5_3_0_relu_config16_s_HH_
#define _relu_ap_fixed_ap_ufixed_28_4_5_3_0_relu_config16_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct relu_ap_fixed_ap_ufixed_28_4_5_3_0_relu_config16_s : public sc_module {
    // Port declarations 25
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > data_0_V_read;
    sc_in< sc_lv<64> > data_1_V_read;
    sc_in< sc_lv<64> > data_2_V_read;
    sc_in< sc_lv<64> > data_3_V_read;
    sc_in< sc_lv<64> > data_4_V_read;
    sc_in< sc_lv<64> > data_5_V_read;
    sc_in< sc_lv<64> > data_6_V_read;
    sc_in< sc_lv<64> > data_7_V_read;
    sc_in< sc_lv<64> > data_8_V_read;
    sc_in< sc_lv<64> > data_9_V_read;
    sc_in< sc_lv<64> > data_10_V_read;
    sc_in< sc_lv<64> > data_11_V_read;
    sc_out< sc_lv<28> > ap_return_0;
    sc_out< sc_lv<28> > ap_return_1;
    sc_out< sc_lv<28> > ap_return_2;
    sc_out< sc_lv<28> > ap_return_3;
    sc_out< sc_lv<28> > ap_return_4;
    sc_out< sc_lv<28> > ap_return_5;
    sc_out< sc_lv<28> > ap_return_6;
    sc_out< sc_lv<28> > ap_return_7;
    sc_out< sc_lv<28> > ap_return_8;
    sc_out< sc_lv<28> > ap_return_9;
    sc_out< sc_lv<28> > ap_return_10;
    sc_out< sc_lv<28> > ap_return_11;


    // Module declarations
    relu_ap_fixed_ap_ufixed_28_4_5_3_0_relu_config16_s(sc_module_name name);
    SC_HAS_PROCESS(relu_ap_fixed_ap_ufixed_28_4_5_3_0_relu_config16_s);

    ~relu_ap_fixed_ap_ufixed_28_4_5_3_0_relu_config16_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > icmp_ln1494_fu_126_p2;
    sc_signal< sc_lv<28> > trunc_ln_fu_132_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_150_p2;
    sc_signal< sc_lv<28> > trunc_ln708_1_fu_156_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_174_p2;
    sc_signal< sc_lv<28> > trunc_ln708_2_fu_180_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_198_p2;
    sc_signal< sc_lv<28> > trunc_ln708_3_fu_204_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_4_fu_222_p2;
    sc_signal< sc_lv<28> > trunc_ln708_4_fu_228_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_5_fu_246_p2;
    sc_signal< sc_lv<28> > trunc_ln708_5_fu_252_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_6_fu_270_p2;
    sc_signal< sc_lv<28> > trunc_ln708_6_fu_276_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_7_fu_294_p2;
    sc_signal< sc_lv<28> > trunc_ln708_7_fu_300_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_8_fu_318_p2;
    sc_signal< sc_lv<28> > trunc_ln708_8_fu_324_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_9_fu_342_p2;
    sc_signal< sc_lv<28> > trunc_ln708_9_fu_348_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_10_fu_366_p2;
    sc_signal< sc_lv<28> > trunc_ln708_10_fu_372_p4;
    sc_signal< sc_lv<1> > icmp_ln1494_11_fu_390_p2;
    sc_signal< sc_lv<28> > trunc_ln708_s_fu_396_p4;
    sc_signal< sc_lv<28> > select_ln1494_fu_142_p3;
    sc_signal< sc_lv<28> > select_ln1494_12_fu_166_p3;
    sc_signal< sc_lv<28> > select_ln1494_13_fu_190_p3;
    sc_signal< sc_lv<28> > select_ln1494_14_fu_214_p3;
    sc_signal< sc_lv<28> > select_ln1494_15_fu_238_p3;
    sc_signal< sc_lv<28> > select_ln1494_16_fu_262_p3;
    sc_signal< sc_lv<28> > select_ln1494_17_fu_286_p3;
    sc_signal< sc_lv<28> > select_ln1494_18_fu_310_p3;
    sc_signal< sc_lv<28> > select_ln1494_19_fu_334_p3;
    sc_signal< sc_lv<28> > select_ln1494_20_fu_358_p3;
    sc_signal< sc_lv<28> > select_ln1494_21_fu_382_p3;
    sc_signal< sc_lv<28> > select_ln1494_22_fu_406_p3;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_icmp_ln1494_10_fu_366_p2();
    void thread_icmp_ln1494_11_fu_390_p2();
    void thread_icmp_ln1494_1_fu_150_p2();
    void thread_icmp_ln1494_2_fu_174_p2();
    void thread_icmp_ln1494_3_fu_198_p2();
    void thread_icmp_ln1494_4_fu_222_p2();
    void thread_icmp_ln1494_5_fu_246_p2();
    void thread_icmp_ln1494_6_fu_270_p2();
    void thread_icmp_ln1494_7_fu_294_p2();
    void thread_icmp_ln1494_8_fu_318_p2();
    void thread_icmp_ln1494_9_fu_342_p2();
    void thread_icmp_ln1494_fu_126_p2();
    void thread_select_ln1494_12_fu_166_p3();
    void thread_select_ln1494_13_fu_190_p3();
    void thread_select_ln1494_14_fu_214_p3();
    void thread_select_ln1494_15_fu_238_p3();
    void thread_select_ln1494_16_fu_262_p3();
    void thread_select_ln1494_17_fu_286_p3();
    void thread_select_ln1494_18_fu_310_p3();
    void thread_select_ln1494_19_fu_334_p3();
    void thread_select_ln1494_20_fu_358_p3();
    void thread_select_ln1494_21_fu_382_p3();
    void thread_select_ln1494_22_fu_406_p3();
    void thread_select_ln1494_fu_142_p3();
    void thread_trunc_ln708_10_fu_372_p4();
    void thread_trunc_ln708_1_fu_156_p4();
    void thread_trunc_ln708_2_fu_180_p4();
    void thread_trunc_ln708_3_fu_204_p4();
    void thread_trunc_ln708_4_fu_228_p4();
    void thread_trunc_ln708_5_fu_252_p4();
    void thread_trunc_ln708_6_fu_276_p4();
    void thread_trunc_ln708_7_fu_300_p4();
    void thread_trunc_ln708_8_fu_324_p4();
    void thread_trunc_ln708_9_fu_348_p4();
    void thread_trunc_ln708_s_fu_396_p4();
    void thread_trunc_ln_fu_132_p4();
};

}

using namespace ap_rtl;

#endif
