-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_ap_fixed_ap_fixed_config2_0_0_0_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (22 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (22 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (22 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (22 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of dense_latency_ap_fixed_ap_fixed_config2_0_0_0_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv44_3302 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000011001100000010";
    constant ap_const_lv44_3D8A : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000011110110001010";
    constant ap_const_lv44_FFFFFFFDEAF : STD_LOGIC_VECTOR (43 downto 0) := "11111111111111111111111111111101111010101111";
    constant ap_const_lv44_3EE8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000011111011101000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv52_FEB6000000000 : STD_LOGIC_VECTOR (51 downto 0) := "1111111010110110000000000000000000000000000000000000";
    constant ap_const_lv52_FEDFC00000000 : STD_LOGIC_VECTOR (51 downto 0) := "1111111011011111110000000000000000000000000000000000";
    constant ap_const_lv52_140000000000 : STD_LOGIC_VECTOR (51 downto 0) := "0000000101000000000000000000000000000000000000000000";
    constant ap_const_lv52_FF09C00000000 : STD_LOGIC_VECTOR (51 downto 0) := "1111111100001001110000000000000000000000000000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";

    signal mul_ln728_fu_65_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln728_reg_148 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal mul_ln728_1_fu_67_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln728_1_reg_152 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln728_2_fu_64_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln728_2_reg_156 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln728_3_fu_66_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln728_3_reg_160 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln728_2_fu_64_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1118_fu_165_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mul_ln728_fu_65_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln728_3_fu_66_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln728_1_fu_67_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_173_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal shl_ln728_1_fu_181_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal shl_ln728_2_fu_189_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal shl_ln728_3_fu_197_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_s_fu_205_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal acc_1_V_fu_211_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal acc_2_V_fu_217_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal acc_3_V_fu_223_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_return_2_int_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_return_3_int_reg : STD_LOGIC_VECTOR (22 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= p_Val2_s_fu_205_p2(51 downto 29);
                ap_return_1_int_reg <= acc_1_V_fu_211_p2(51 downto 29);
                ap_return_2_int_reg <= acc_2_V_fu_217_p2(51 downto 29);
                ap_return_3_int_reg <= acc_3_V_fu_223_p2(51 downto 29);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                    mul_ln728_1_reg_152(43 downto 3) <= mul_ln728_1_fu_67_p2(43 downto 3);
                    mul_ln728_2_reg_156(43 downto 1) <= mul_ln728_2_fu_64_p2(43 downto 1);
                mul_ln728_3_reg_160 <= mul_ln728_3_fu_66_p2;
                    mul_ln728_reg_148(43 downto 1) <= mul_ln728_fu_65_p2(43 downto 1);
            end if;
        end if;
    end process;
    mul_ln728_reg_148(0) <= '0';
    mul_ln728_1_reg_152(2 downto 0) <= "000";
    mul_ln728_2_reg_156(0) <= '0';
    acc_1_V_fu_211_p2 <= std_logic_vector(unsigned(shl_ln728_1_fu_181_p3) + unsigned(ap_const_lv52_FEDFC00000000));
    acc_2_V_fu_217_p2 <= std_logic_vector(unsigned(shl_ln728_2_fu_189_p3) + unsigned(ap_const_lv52_140000000000));
    acc_3_V_fu_223_p2 <= std_logic_vector(unsigned(shl_ln728_3_fu_197_p3) + unsigned(ap_const_lv52_FF09C00000000));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(p_Val2_s_fu_205_p2, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= p_Val2_s_fu_205_p2(51 downto 29);
        end if; 
    end process;


    ap_return_1_assign_proc : process(acc_1_V_fu_211_p2, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= acc_1_V_fu_211_p2(51 downto 29);
        end if; 
    end process;


    ap_return_2_assign_proc : process(acc_2_V_fu_217_p2, ap_ce_reg, ap_return_2_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_2 <= ap_return_2_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_2 <= acc_2_V_fu_217_p2(51 downto 29);
        end if; 
    end process;


    ap_return_3_assign_proc : process(acc_3_V_fu_223_p2, ap_ce_reg, ap_return_3_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_3 <= ap_return_3_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_3 <= acc_3_V_fu_223_p2(51 downto 29);
        end if; 
    end process;

    mul_ln728_1_fu_67_p0 <= sext_ln1118_fu_165_p1(32 - 1 downto 0);
    mul_ln728_1_fu_67_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_1_fu_67_p0) * signed('0' &ap_const_lv44_3EE8))), 44));
    mul_ln728_2_fu_64_p0 <= sext_ln1118_fu_165_p1(32 - 1 downto 0);
    mul_ln728_2_fu_64_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_2_fu_64_p0) * signed('0' &ap_const_lv44_3302))), 44));
    mul_ln728_3_fu_66_p0 <= sext_ln1118_fu_165_p1(32 - 1 downto 0);
    mul_ln728_3_fu_66_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_3_fu_66_p0) * signed(ap_const_lv44_FFFFFFFDEAF))), 44));
    mul_ln728_fu_65_p0 <= sext_ln1118_fu_165_p1(32 - 1 downto 0);
    mul_ln728_fu_65_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln728_fu_65_p0) * signed('0' &ap_const_lv44_3D8A))), 44));
    p_Val2_s_fu_205_p2 <= std_logic_vector(unsigned(shl_ln_fu_173_p3) + unsigned(ap_const_lv52_FEB6000000000));
        sext_ln1118_fu_165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_V_read),44));

    shl_ln728_1_fu_181_p3 <= (mul_ln728_1_reg_152 & ap_const_lv8_0);
    shl_ln728_2_fu_189_p3 <= (mul_ln728_2_reg_156 & ap_const_lv8_0);
    shl_ln728_3_fu_197_p3 <= (mul_ln728_3_reg_160 & ap_const_lv8_0);
    shl_ln_fu_173_p3 <= (mul_ln728_reg_148 & ap_const_lv8_0);
end behav;
