-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu_ap_fixed_ap_ufixed_14_4_5_3_0_relu_config7_s is
port (
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of relu_ap_fixed_ap_ufixed_14_4_5_3_0_relu_config7_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal icmp_ln1494_fu_94_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_100_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_1_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_1_fu_124_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_2_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_2_fu_148_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_3_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_3_fu_172_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_4_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_4_fu_196_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_5_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_5_fu_220_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_6_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_6_fu_244_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_7_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_7_fu_268_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_fu_110_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_48_fu_134_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_49_fu_158_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_50_fu_182_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_51_fu_206_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_52_fu_230_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_53_fu_254_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln1494_54_fu_278_p3 : STD_LOGIC_VECTOR (13 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= select_ln1494_fu_110_p3;
    ap_return_1 <= select_ln1494_48_fu_134_p3;
    ap_return_2 <= select_ln1494_49_fu_158_p3;
    ap_return_3 <= select_ln1494_50_fu_182_p3;
    ap_return_4 <= select_ln1494_51_fu_206_p3;
    ap_return_5 <= select_ln1494_52_fu_230_p3;
    ap_return_6 <= select_ln1494_53_fu_254_p3;
    ap_return_7 <= select_ln1494_54_fu_278_p3;
    icmp_ln1494_1_fu_118_p2 <= "1" when (signed(data_1_V_read) > signed(ap_const_lv64_0)) else "0";
    icmp_ln1494_2_fu_142_p2 <= "1" when (signed(data_2_V_read) > signed(ap_const_lv64_0)) else "0";
    icmp_ln1494_3_fu_166_p2 <= "1" when (signed(data_3_V_read) > signed(ap_const_lv64_0)) else "0";
    icmp_ln1494_4_fu_190_p2 <= "1" when (signed(data_4_V_read) > signed(ap_const_lv64_0)) else "0";
    icmp_ln1494_5_fu_214_p2 <= "1" when (signed(data_5_V_read) > signed(ap_const_lv64_0)) else "0";
    icmp_ln1494_6_fu_238_p2 <= "1" when (signed(data_6_V_read) > signed(ap_const_lv64_0)) else "0";
    icmp_ln1494_7_fu_262_p2 <= "1" when (signed(data_7_V_read) > signed(ap_const_lv64_0)) else "0";
    icmp_ln1494_fu_94_p2 <= "1" when (signed(data_0_V_read) > signed(ap_const_lv64_0)) else "0";
    select_ln1494_48_fu_134_p3 <= 
        trunc_ln708_1_fu_124_p4 when (icmp_ln1494_1_fu_118_p2(0) = '1') else 
        ap_const_lv14_0;
    select_ln1494_49_fu_158_p3 <= 
        trunc_ln708_2_fu_148_p4 when (icmp_ln1494_2_fu_142_p2(0) = '1') else 
        ap_const_lv14_0;
    select_ln1494_50_fu_182_p3 <= 
        trunc_ln708_3_fu_172_p4 when (icmp_ln1494_3_fu_166_p2(0) = '1') else 
        ap_const_lv14_0;
    select_ln1494_51_fu_206_p3 <= 
        trunc_ln708_4_fu_196_p4 when (icmp_ln1494_4_fu_190_p2(0) = '1') else 
        ap_const_lv14_0;
    select_ln1494_52_fu_230_p3 <= 
        trunc_ln708_5_fu_220_p4 when (icmp_ln1494_5_fu_214_p2(0) = '1') else 
        ap_const_lv14_0;
    select_ln1494_53_fu_254_p3 <= 
        trunc_ln708_6_fu_244_p4 when (icmp_ln1494_6_fu_238_p2(0) = '1') else 
        ap_const_lv14_0;
    select_ln1494_54_fu_278_p3 <= 
        trunc_ln708_7_fu_268_p4 when (icmp_ln1494_7_fu_262_p2(0) = '1') else 
        ap_const_lv14_0;
    select_ln1494_fu_110_p3 <= 
        trunc_ln_fu_100_p4 when (icmp_ln1494_fu_94_p2(0) = '1') else 
        ap_const_lv14_0;
    trunc_ln708_1_fu_124_p4 <= data_1_V_read(51 downto 38);
    trunc_ln708_2_fu_148_p4 <= data_2_V_read(51 downto 38);
    trunc_ln708_3_fu_172_p4 <= data_3_V_read(51 downto 38);
    trunc_ln708_4_fu_196_p4 <= data_4_V_read(51 downto 38);
    trunc_ln708_5_fu_220_p4 <= data_5_V_read(51 downto 38);
    trunc_ln708_6_fu_244_p4 <= data_6_V_read(51 downto 38);
    trunc_ln708_7_fu_268_p4 <= data_7_V_read(51 downto 38);
    trunc_ln_fu_100_p4 <= data_0_V_read(51 downto 38);
end behav;
